<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on urlve</title>
    <link>https://urlve.github.io/post/</link>
    <description>Recent content in Posts on urlve</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Aug 2018 11:11:44 +0800</lastBuildDate>
    
	<atom:link href="https://urlve.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gg</title>
      <link>https://urlve.github.io/post/gg/</link>
      <pubDate>Fri, 17 Aug 2018 11:11:44 +0800</pubDate>
      
      <guid>https://urlve.github.io/post/gg/</guid>
      <description>1997
题目一-题目大意
给出一个n*m的棋盘，计算其中的正方形和长方形（不包含正方形）有多少个。
考察算法
数学。
算法一
思路：
枚举长方形的边长，暴力计算，累加。
时间复杂度分析：
O(n*m)
期望得分：
100分。
参考代码：
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;algorithm&amp;gt; using namespace std; int main() { int n,m; scanf(&amp;quot;%d%d&amp;quot;,&amp;amp;n,&amp;amp;m); int sq = 0,rec = 0; for (int i = 1;i &amp;lt;= max(n,m);i++) { for (int j = 1;j &amp;lt;= max(n,m);j++) { if (i == j) { int x = n - i + 1; int y = m - j + 1; if (x &amp;lt;= 0 || y &amp;lt;= 0) continue; sq += x * y; } else { int x = n - i + 1; int y = m - j + 1; if (x &amp;lt;= 0 || y &amp;lt;= 0) continue; rec += x * y; } } } printf(&amp;quot;%d %d\n&amp;quot;,sq,rec); return 0; }  算法二</description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://urlve.github.io/post/test/</link>
      <pubDate>Thu, 16 Aug 2018 11:53:23 +0800</pubDate>
      
      <guid>https://urlve.github.io/post/test/</guid>
      <description>sfafds sdfsdfsd sdfdsfsd sdfsf
#include &amp;lt;stdio.h&amp;gt; int main() { return 0; }  </description>
    </item>
    
    <item>
      <title>First</title>
      <link>https://urlve.github.io/post/first/</link>
      <pubDate>Thu, 16 Aug 2018 10:51:21 +0800</pubDate>
      
      <guid>https://urlve.github.io/post/first/</guid>
      <description>1995 题目一-题目大意 给出一个算式，根据给出的数字求这个算式中的未知数字。
考察算法 暴力枚举。
算法一 思路： 暴力枚举除数和被除数，算出其它数字，再判断是否满足算式的条件。
时间复杂度分析： $O(M * N)$，$M \leq 100,N \leq 10000$。
期望得分： 100分。
参考代码： #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;algorithm&amp;gt; using namespace std; int main() { for (int i = 10;i &amp;lt;= 99;i++) { for (int j = 1000;j &amp;lt;= 9999;j++) { int k = i * 8; if (k &amp;gt;= 100) continue; int x = j / 100; int y = x - k; if (y &amp;lt; 1 || y &amp;gt; 9) continue; int m = y * 100 + j % 100; int n = i * 9; if (n &amp;lt; 100) continue; if (m - n !</description>
    </item>
    
  </channel>
</rss>